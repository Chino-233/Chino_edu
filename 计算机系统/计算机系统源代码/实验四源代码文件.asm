.ORIG x3000
LOOP
    AND R0,R0,0;
    AND R2,R2,0;
    AND R4,R4,0;
    AND R5,R5,0;
    AND R6,R6,0;
    AND R7,R7,0;
    JSR OUTPUT
    ST R0,TEMPSTONER0
    IN
    ;R1作为char a R2作为char b
    ;R4作为anum R5作为bnum
    ADD R1,R0,0;输入a
    LD R3,Q
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R1,R3;判断Q
    BRZ EN
    LD R3,A
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R1,R3;判断>=A
    BRN WRONGOUTPUT
    LD R3,G
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R1,R3;判断<=G
    BRP WRONGOUTPUT
    JSR ANUMSUB
    ST R4 ANUM ;存结果ANUM
    IN
    ADD R2,R0,0;输入 b
    LD R3,ASCLL0
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R2,R3;判断>=0
    BRN WRONGOUTPUT
    LD R3,ASCLL6
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R2,R3;判断<=6
    BRP WRONGOUTPUT
    JSR BNUMSUB
    ST R5,BNUM ;存结果BNUM
    JSR JUDGE ;判断是否符合输入情况并更改
    JSR JUDGESCORE ;判断四个小格子并更改其内容
    ;JSR OUTPUT
    LD R0,TEMPSTONER0
    LD R3,PLAYWHO ;更改输入玩家
    ADD R3,R3,-1;
    BRZ CHANGTO2
    AND R3,R3,0;
    ADD R3,R3,1;
    ST R3,PLAYWHO
    BRNZP LOOP
CHANGTO2
    ADD R3,R3,0;
    ADD R3,R3,2;
    ST R3,PLAYWHO
    BRNZP LOOP
ANUMSUB
    ST R7,TEMPSTONER7
    ST R3,TEMPSTONER3
    LD R3,A
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R4,R1,R3;
    LD R3,TEMPSTONER3
    LD R7,TEMPSTONER7
    RET
BNUMSUB
    ST R7,TEMPSTONER7
    ST R3,TEMPSTONER3
    LD R3,ASCLL0
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R5,R2,R3;
    LD R3,TEMPSTONER3
    LD R7,TEMPSTONER7
    RET
JUDGE
    ST R7,TEMPSTONER71
    LD R0,ANUM ;
    LD R1,BNUM ;
    LEA R2,STRINGS0 ;
    ADD R2,R2,-9
LOOPADD
    ADD R2,R2,9;
    ADD R1,R1,-1;
    BRZP LOOPADD
    ADD R2,R2,R0;
    ;R2变为具体的str[bnum][anum]
    AND R1,R1,0;
    LDR R0,R2,0;
    JSR HAVEBEUSE
    LD R0,ANUM ;
    AND R0,R0,1;
    BRZ NOWRONGPOS
    LD R0,BNUM ;
    AND R0,R0,1;
    BRZ NOWRONGPOS
    BRNZP WRONGOUTPUT
NOWRONGPOS
    LD R0,ANUM
    AND R0,R0,1;
    BRP CHANGESUB
    LD R0,BNUM
    AND R0,R0,1;
    BRP CHANGEVER
CHANGEVER
    LD R4,ASCLLVER
    STR R4,R2,0;
    BRNZP CHANGEEND
CHANGESUB
    LD R4,ASCLLSUB ;
    STR R4,R2,0;
CHANGEEND
    LD R7,TEMPSTONER71
    RET
JUDGESCORE
    ST R0,TEMPSTONER0
    ST R1,TEMPSTONER1
    ST R2,TEMPSTONER2
    ST R3,TEMPSTONER3
    ST R4,TEMPSTONER4
    ST R7,TEMPSTONER71
    AND R0,R0,0;
    AND R1,R1,0;
    AND R2,R2,0;
    AND R3,R3,0;
    AND R4,R4,0;
    ADD R0,R0,-1 ;i
    ADD R1,R1,-1 ;j
SCROELOOPOUT
    AND R1,R1,0;
    ADD R1,R1,-1;
    ADD R0,R0,2;
    AND R4,R4,0;
    ADD R4,R4,6;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R0;
    BRZP SCROEEND
SCROELOOPIN
    ADD R1,R1,2;
    AND R4,R4,0;
    ADD R4,R4,6;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R1;R4为临时的6存储
    BRZP SCROELOOPOUT
    LEA R2,STRINGS0 ;
    JSR LOOPADDS ;
    LD R4,ASCLLSPACE ;
    NOT R4,R4;
    ADD R4,R4,1;
    LDR R3,R2,0;
    ADD R4,R3,R4;if(str[i][j]==' ')
    BRNP SCROELOOPIN
    ;if(str[i-1][j]=='-'&&str[i+1][j]=='-'&&str[i][j-1]=='|'&&str[i][j+1]=='|')
    LDR R3,R2,1;
    LD R4,ASCLLVER ;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R3;
    BRNP SCROELOOPIN
    LDR R3,R2,-1;
    LD R4,ASCLLVER ;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R3;
    BRNP SCROELOOPIN
    LDR R3,R2,9;
    LD R4,ASCLLSUB ;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R3;
    BRNP SCROELOOPIN
    LDR R3,R2,-9;
    LD R4,ASCLLSUB ;
    NOT R4,R4;
    ADD R4,R4,1;
    ADD R4,R4,R3;
    BRNP SCROELOOPIN
    LD R3,PLAYWHO ;
    LD R4,ASCLL0 ;
    ADD R3,R3,R4;
    STR R3,R2,0;
    LD R3,PLAYWHO
    AND R3,R3,1;
    BRNZ PLAY2SCOREADD
    LD R5,ASCLL0
    ADD R3,R3,R5;
    STR R3,R2,0;
    LD R4,PLAY1SCORE ;
    ADD R4,R4,1;
    ST R4,PLAY1SCORE
    BRNZP SCROELOOPIN
PLAY2SCOREADD
    LD R5,ASCLL0
    ADD R5,R5,2;
    ADD R3,R3,R5;
    STR R5,R2,0;
    LD R4,PLAY2SCORE ;
    ADD R4,R4,1;
    ST R4,PLAY2SCORE ;
    BRNZP SCROELOOPIN
SCROEEND
    LD R7,TEMPSTONER71
    RET
LOOPADDS
    ST R7,TEMPSTONER7
    ST R1,TEMPSTONER1
    ADD R6,R0,0;
AGAIN
    ADD R2,R2,9;
    ADD R6,R6,-1;
    BRP AGAIN
    ADD R2,R2,R1;
    LD R7,TEMPSTONER7
    LD R1,TEMPSTONER1
    RET
HAVEBEUSE
    ST R7,TEMPSTONER7
    ST R3,TEMPSTONER3
    LD R3,ASCLLSTAR
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R0,R3;
    BRZ WRONGOUTPUT
    LD R3,ASCLLSUB
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R0,R3;
    BRZ WRONGOUTPUT
    LD R3,ASCLLVER
    NOT R3,R3;
    ADD R3,R3,1;
    ADD R3,R0,R3;
    BRZ WRONGOUTPUT
    LD R3,TEMPSTONER3
    LD R7,TEMPSTONER7
    RET
OUTPUT
    ST R0,TEMPSTONER0
    ST R7,TEMPSTONER7
    LEA R0,STRINGS0
    PUTS
    LEA R0,STRINGS1
    PUTS
    LEA R0,STRINGS2
    PUTS
    LEA R0,STRINGS3
    PUTS
    LEA R0,STRINGS4
    PUTS
    LEA R0,STRINGS5
    PUTS
    LEA R0,STRINGS6
    PUTS 
    LD R0,TEMPSTONER0
    LD R7,TEMPSTONER7
    RET    
WRONGOUTPUT
    ST R0,TEMPSTONER0
    LEA R0,WRONGOUT1
    PUTS
    LD R0,PLAYWHO
    ADD R3,R0,0;
    LD R1,ASCLL0
    ADD R0,R0,R1;
    OUT
    ST R3,PLAYWHO
    LEA R0,WRONGOUT2
    PUTS
    LD R0,TEMPSTONER0
    BRNZP LOOP
EN
    HALT
PLAYWHO .FILL X0001;
Q .FILL x0051
A .FILL X0041
G .FILL X0047;
TEMPSTONER0 .FILL X0000;
TEMPSTONER1 .FILL X0000;
TEMPSTONER2 .FILL X0000;
TEMPSTONER3 .FILL X0000;
TEMPSTONER4 .FILL X0000;
CHARA .FILL X0000;
CHARB .FILL X0000;
ANUM .FILL X0000;
BNUM .FILL X0000;
PLAY1SCORE .FILL X0000;
PLAY2SCORE .FILL X0000;
TEMPSTONER7 .FILL X0000;
TEMPSTONER71 .FILL X0000;
ASCLLSTAR .FILL X002A
ASCLLSUB .FILL X002D
ASCLLVER .FILL X007C
ASCLL0 .FILL X0030
ASCLL6 .FILL X0036
ASCLLSPACE .FILL X0020
WRONGOUT1 .STRINGZ "player"
WRONGOUT2 .STRINGZ " input are wrong! please input again\n"
STRINGS0 .STRINGZ "* * * *\n";
STRINGS1 .STRINGZ "       \n";
STRINGS2 .STRINGZ "* * * *\n";
STRINGS3 .STRINGZ "       \n";
STRINGS4 .STRINGZ "* * * *\n";
STRINGS5 .STRINGZ "       \n";
STRINGS6 .STRINGZ "* * * *\n";
.END